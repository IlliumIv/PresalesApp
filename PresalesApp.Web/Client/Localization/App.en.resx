<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="WelcomeText" xml:space="preserve">
    <value>Welcome to your new app.</value>
  </data>
  <data name="HelloWorldPlaceholder" xml:space="preserve">
    <value>Hello, world!</value>
  </data>
  <data name="ConnectErrorTryLater" xml:space="preserve">
    <value>Unable to connect to {0}. Try later.</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading</value>
  </data>
  <data name="UnsplashCredits" xml:space="preserve">
    <value>Photo by {0} on {1}</value>
  </data>
  <data name="BridgeName" xml:space="preserve">
    <value>Bridge1C Service</value>
  </data>
  <data name="PWAServerName" xml:space="preserve">
    <value>PresalesApp Web Server</value>
  </data>
  <data name="HomePage" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="SpreadsheetPage" xml:space="preserve">
    <value>Spreadsheet</value>
  </data>
  <data name="KpiPage" xml:space="preserve">
    <value>Kpi</value>
  </data>
  <data name="PresalesDashboardPage" xml:space="preserve">
    <value>Presales dashboard</value>
  </data>
  <data name="UnpaidPage" xml:space="preserve">
    <value>Unpaid projects</value>
  </data>
  <data name="SalesDashboardPage" xml:space="preserve">
    <value>Sales dashboard</value>
  </data>
  <data name="LoginButtonModalText" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="LoginText" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="PasswordText" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="CloseButtonText" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="LogoutButtonText" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="RegisterModalButtonText" xml:space="preserve">
    <value>Sign up</value>
  </data>
  <data name="OrderNumberText" xml:space="preserve">
    <value>№</value>
  </data>
  <data name="CounterpartText" xml:space="preserve">
    <value>Counterpart</value>
  </data>
  <data name="InvoiceNumberText" xml:space="preserve">
    <value>Invoice Number</value>
  </data>
  <data name="InvoiceDateText" xml:space="preserve">
    <value>Invoice Date</value>
  </data>
  <data name="InvoiceAmountText" xml:space="preserve">
    <value>Invoice Amount</value>
  </data>
  <data name="InvoiceCostPriceText" xml:space="preserve">
    <value>Invoice Cost Price</value>
  </data>
  <data name="InvoiceProfitText" xml:space="preserve">
    <value>Invoice Profit</value>
  </data>
  <data name="PresalePercentText" xml:space="preserve">
    <value>Percent</value>
  </data>
  <data name="PresaleProfitText" xml:space="preserve">
    <value>Profit</value>
  </data>
  <data name="ProjectsText" xml:space="preserve">
    <value>Projects</value>
  </data>
  <data name="KpiReportFileName" xml:space="preserve">
    <value>Kpi report for {0} {1}, {2}</value>
  </data>
  <data name="ProjectNumberTitle" xml:space="preserve">
    <value>Project Number</value>
  </data>
  <data name="ProjectNameTitle" xml:space="preserve">
    <value>Project Name</value>
  </data>
  <data name="PresaleText" xml:space="preserve">
    <value>Presale</value>
  </data>
  <data name="ProjectStatusTitle" xml:space="preserve">
    <value>Project Status</value>
  </data>
  <data name="ProjectClosedAtTitle" xml:space="preserve">
    <value>Project Close Date</value>
  </data>
  <data name="UnpaidReportFileName" xml:space="preserve">
    <value>Unpaid projects on {0}</value>
  </data>
  <data name="DownloadReportButtonText" xml:space="preserve">
    <value>Download report</value>
  </data>
  <data name="NoInvoicesForThisPeriodMessageText" xml:space="preserve">
    <value>No invoices for this period.</value>
  </data>
  <data name="UnknownServerResponseMessageText" xml:space="preserve">
    <value>Unknown server response.</value>
  </data>
  <data name="FunnelPage" xml:space="preserve">
    <value>Funnel</value>
  </data>
  <data name="ProjectPotentialTitle" xml:space="preserve">
    <value>Potential Amount</value>
  </data>
  <data name="PresaleNotAssignedYetMessage" xml:space="preserve">
    <value>Presale Not Assigned</value>
  </data>
  <data name="TotalText" xml:space="preserve">
    <value>Total:</value>
  </data>
  <data name="ReportText" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="ItemLegendText" xml:space="preserve">
    <value>Legend</value>
  </data>
  <data name="ProjectFunnelStageTitle" xml:space="preserve">
    <value>Funnel Stage</value>
  </data>
  <data name="ActionsPlaceholder" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="CollapseAllButtonText" xml:space="preserve">
    <value>Collapse all</value>
  </data>
  <data name="ExpandAllButtonText" xml:space="preserve">
    <value>Expand all</value>
  </data>
  <data name="FunnelStageNoneText" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="FunnelStageFirstText" xml:space="preserve">
    <value>First</value>
  </data>
  <data name="FunnelStageSecondText" xml:space="preserve">
    <value>Second</value>
  </data>
  <data name="FunnelStageThirdText" xml:space="preserve">
    <value>Third</value>
  </data>
  <data name="FunnelStageFourthText" xml:space="preserve">
    <value>Fourth</value>
  </data>
  <data name="FunnelStageFifthText" xml:space="preserve">
    <value>Fifth</value>
  </data>
  <data name="FunnelStageSixthText" xml:space="preserve">
    <value>Sixth</value>
  </data>
  <data name="FunnelStageSeventhText" xml:space="preserve">
    <value>Seventh</value>
  </data>
  <data name="FunnelStageEigthText" xml:space="preserve">
    <value>Eigth</value>
  </data>
  <data name="FunnelStageRefusedText" xml:space="preserve">
    <value>Refused</value>
  </data>
  <data name="FunnelStageAnyText" xml:space="preserve">
    <value>Any</value>
  </data>
  <data name="ActionNumberText" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="ActionDateText" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="ActionDescriptionText" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="SuggestImprovementsButtonText" xml:space="preserve">
    <value>Suggest improvements</value>
  </data>
  <data name="ProjectLastFunnelActionTitle" xml:space="preserve">
    <value>Last Action Date</value>
  </data>
  <data name="PreviousWeekText" xml:space="preserve">
    <value>Previous week</value>
  </data>
  <data name="NextWeekText" xml:space="preserve">
    <value>Next week</value>
  </data>
  <data name="QuarterText" xml:space="preserve">
    <value>{0} quarter {1}</value>
  </data>
  <data name="PreviousYearsText" xml:space="preserve">
    <value>Previous years...</value>
  </data>
  <data name="NextYearsText" xml:space="preserve">
    <value>The following years...</value>
  </data>
  <data name="PeriodTypeDayText" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="PeriodTypeMonthText" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="PeriodTypeQuarterText" xml:space="preserve">
    <value>Quarter</value>
  </data>
  <data name="PeriodTypeYearText" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="PeriodTypeArbitraryText" xml:space="preserve">
    <value>Arbitrary</value>
  </data>
  <data name="DataGridItemsPerPageText" xml:space="preserve">
    <value>items per page</value>
  </data>
  <data name="PresalesNYDashboardPage" xml:space="preserve">
    <value>Presales dashboard</value>
  </data>
  <data name="KpiCalculationDefaultText" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="KpiCalculationPreOrder26Text" xml:space="preserve">
    <value>Pre Order 26</value>
  </data>
  <data name="KpiCalculationPostOrder26Text" xml:space="preserve">
    <value>Post Order 26</value>
  </data>
  <data name="KpiCalculationTypeLabel" xml:space="preserve">
    <value>Calculation method:</value>
  </data>
  <data name="CurrentThemeLabel" xml:space="preserve">
    <value>Current theme:</value>
  </data>
  <data name="CurrentCultureLabel" xml:space="preserve">
    <value>Current culture:</value>
  </data>
  <data name="OpenAppSettingsButtonText" xml:space="preserve">
    <value>Open app settings</value>
  </data>
  <data name="SettingsWindowTitle" xml:space="preserve">
    <value>App settings</value>
  </data>
  <data name="RecursiveInvoicesCountCheckboxName" xml:space="preserve">
    <value>Count invoices recursively across main projects</value>
  </data>
  <data name="PeriodTypeLabel" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="FiltersToggleShowTitle" xml:space="preserve">
    <value>Show filters</value>
  </data>
  <data name="FiltersToggleClearTitle" xml:space="preserve">
    <value>Clear filters</value>
  </data>
  <data name="RequiredValidatorHelperText" xml:space="preserve">
    <value>is required.</value>
  </data>
  <data name="FormValidationErrorText" xml:space="preserve">
    <value>Not all required fields are filled.</value>
  </data>
  <data name="RequestParamsFieldsetText" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="CollapseTitle" xml:space="preserve">
    <value>Collapse</value>
  </data>
  <data name="ExpandTitle" xml:space="preserve">
    <value>Expand</value>
  </data>
  <data name="SettingsToggleShowTitle" xml:space="preserve">
    <value>Show settings</value>
  </data>
  <data name="SettingsToggleHideTitle" xml:space="preserve">
    <value>Hide settings</value>
  </data>
  <data name="SelectColumnsButtonText" xml:space="preserve">
    <value>Select columns</value>
  </data>
  <data name="SelectAllLabel" xml:space="preserve">
    <value>Select all</value>
  </data>
  <data name="ProjectPresaleTitle" xml:space="preserve">
    <value>Presale</value>
  </data>
  <data name="ProjectLastActionTimeTitle" xml:space="preserve">
    <value>Last Action Time</value>
  </data>
  <data name="ProjectApprovalBySalesDirectorAtTitle" xml:space="preserve">
    <value>Sales Director Approval Date</value>
  </data>
  <data name="ProjectPresaleStartAtTitle" xml:space="preserve">
    <value>Presale Work Start Date</value>
  </data>
  <data name="ProjectActionsTitle" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="ProjectInvoicesTitle" xml:space="preserve">
    <value>Invoices</value>
  </data>
  <data name="ProjectStatusWonText" xml:space="preserve">
    <value>Won</value>
  </data>
  <data name="ProjectsReportFileName" xml:space="preserve">
    <value>Projects, {0}</value>
  </data>
  <data name="ComparsionTypeNoneText" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="ComparsionTypeGreaterThanText" xml:space="preserve">
    <value>Greater Than</value>
  </data>
  <data name="ComparsionTypeGreaterThanOrEqualText" xml:space="preserve">
    <value>Greater Than Or Equal</value>
  </data>
  <data name="ComparsionTypeLessThanText" xml:space="preserve">
    <value>Less Than</value>
  </data>
  <data name="ComparsionTypeLessThanOrEqualText" xml:space="preserve">
    <value>Less Than Or Equal</value>
  </data>
  <data name="ComparsionTypeEqualText" xml:space="preserve">
    <value>Equal</value>
  </data>
  <data name="ComparsionTypeNotEqualText" xml:space="preserve">
    <value>Not Equal</value>
  </data>
  <data name="ComparsionTypeContainsText" xml:space="preserve">
    <value>Contains</value>
  </data>
</root>