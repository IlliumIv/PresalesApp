@page "/unpaid"

@using Microsoft.AspNetCore.Components.Rendering
@using PresalesApp.Shared
@using PresalesApp.Web.Client.Views.QuickGridExtension

<PageTitle>@Localization["UnpaidPage"]</PageTitle>
<RadzenText TextStyle="TextStyle.DisplayH5" Text="@Localization["UnpaidPage"]" />
<RadzenText Text="@Localization["UnpaidPageDescription"]" />

<div>
    <GridComponent Items="_ProjectsQueryable" Settings="@_RenderSettings"
                   Columns="@([nameof(Project.Number),
                               nameof(Project.Name),
                               nameof(Project.Presale),
                               nameof(Project.Status),
                               nameof(Project.ClosedAt),
                               nameof(Project.Potential)])" />
</div>

@code {
    private void _RenderSettings(RenderTreeBuilder __builder)
    {
        <RadzenStack Gap="0.5rem">
            <RadzenRow AlignItems="AlignItems.Center">
                <RadzenColumn Size="12" SizeMD="1">
                    <RadzenLabel Text="@($"{Localization["PresaleText"]}:")" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="2">
                    <PresalePicker SelectedPresale="@_PresaleName"
                                   OnSelectCallback="@(args => _OnPresaleChanged(args))" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="1">
                    <RadzenLabel Text="@($"{Localization["PeriodTypeLabel"]}:")" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="5">
                    <PeriodPicker Period="@_Period"
                                  PeriodChanged="@(args => _OnPeriodChanged(args))" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="2">
                    <RadzenLabel Text="@($"{Localization["RecursiveInvoicesCountCheckboxName"]}:")" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="1">
                    <RadzenCheckBox title="@Localization["RecursiveInvoicesCountCheckboxName"]"
                                    @bind-Value="@_Is_MainProjectInclude"
                                    onchange="@((ChangeEventArgs e) => _OnModeChanged(e?.Value))" />
                </RadzenColumn>
            </RadzenRow>
        </RadzenStack>
    }
}