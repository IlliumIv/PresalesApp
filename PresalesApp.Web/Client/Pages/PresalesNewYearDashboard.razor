@page "/presales-ny-dashboard"
@implements IDisposable
@layout Infographic
@using pax.BlazorChartJs
@using PresalesApp.Shared

<div class="layout">
    <div class="aeration-warning content" style="display: @_AerationWarning">
        <h2 class="glitch layers">
            <span>Нужно проветрить!</span>
            <span>@_TimeLeft</span>
        </h2>
    </div>
    <div class="percent plan content">
        <fieldset style="background-color: @(ChartHelpers.GetColor("DeepYellow", 0.1f))">
            <legend>@(_IsRealisticPlanDone() ? "Амбициозный" : "Реалистичный") план</legend>
            <div class="fs-content-layout">
                <p class="fs-content">
                    @(_GetProgressPercentString(_Overview?.Presales.Sum(p => p.Metrics.Profit),
                                                _IsRealisticPlanDone()
                                                    ? _Overview?.Plan
                                                    : _Overview?.Actual ?? 1))
                </p>
                <div class="fs-desc">
                    <p>
                        @(_IsAmbitiousPlanDone() ? "План перевыполнен на: " : "До выполнения плана: ")&nbsp;
                        @(Helper.ToCurrencyString(Math.Abs((_Overview?.Profit.Values.Sum(amount => amount) ?? 0)
                                                            - (_IsRealisticPlanDone()
                                                                ? _Overview?.Plan
                                                                : _Overview?.Actual ?? 1)),
                                                  shortFormat: true, allowNegatives: true))</p>
                </div>
            </div>
        </fieldset>
    </div>
    <div class="day-profit plan content">
        <fieldset style="background-color: @(ChartHelpers.GetColor("DeepYellow", 0.1f))">
            <legend>Прирост за день</legend>
            <div class="fs-content-layout">
                <p class="fs-content">@Helper.ToCurrencyString(_DayProfit, shortFormat: true)</p>
                <div class="fs-desc">
                    <p>
                        Получено суммарно:&nbsp;
                        @Helper.ToCurrencyString(_Overview?.Profit.Values.Sum(amount => amount) ?? 0,
                                                 shortFormat: true)
                    </p>
                </div>
            </div>
        </fieldset>
    </div>
    <div class="chart content">
        <ChartComponent ChartJsConfig="_LineChartConfig" />
    </div>
    <div class="allocation content">
        @if (_Overview is not null)
        {
            <RadzenDataGrid TItem="Presale" class="@_OverviewDisableClass"
                            Style="border: none !important;"
                            Data="@_SortedPresales">
                <Columns>
                    <RadzenDataGridColumn Property="Name" Title="@Localization["PresaleNameText"]"
                                          TItem=Presale FooterCssClass="pnyd-footer" Width="20%">
                        <Template>
                            @Helper.GetFirstAndLastName(context.Name)
                        </Template>
                        <FooterTemplate>
                            @Localization["TotalText"]
                        </FooterTemplate>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn Property="Statistics.Profit" Title="Сумма" TItem=Presale TextAlign="TextAlign.Right"
                                          FooterCssClass="pnyd-footer" CssClass="pnyd-progress" Width="35%"
                                          FilterOperator="Radzen.FilterOperator.GreaterThanOrEquals">
                        <Template>
                            <div class="profit-layout">
                                <div class="profit-progress"
                                     style="width: @(_GetProgressPercentString(context.Metrics.Profit,
                                                     _Overview.Presales.Max(p => p.Metrics.Profit)));
                                            background-color: @(ChartHelpers.GetColor("DeepGreen", 0.3f))">
                                    &nbsp;
                                </div>
                                <span class="profit">
                                    @Helper.ToCurrencyString(context.Metrics.Profit)
                                </span>
                            </div>
                        </Template>
                        <FooterTemplate>
                            @Helper.ToCurrencyString(_Overview?.Presales.Sum(i => i.Metrics.Profit) ?? 0)
                        </FooterTemplate>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn Property="Proportion" Title="Доля" TItem=Presale FooterCssClass="pnyd-footer" Width="10%"
                                          TextAlign="TextAlign.Right" FilterOperator="Radzen.FilterOperator.GreaterThanOrEquals">
                        <Template>
                            @_GetProgressPercentString(context.Metrics.Profit, _Overview.Presales.Sum(p => p.Metrics.Profit))
                        </Template>
                        <FooterTemplate>
                            100&nbsp;%
                        </FooterTemplate>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn Property="Invoices" Title="Счетов" TItem=Presale FooterCssClass="pnyd-footer" Width="10%"
                                          TextAlign="TextAlign.Right" FilterOperator="Radzen.FilterOperator.GreaterThanOrEquals">
                        <Template>
                            @(context.Metrics.Invoices - context.Metrics.InvoicesShipped)
                        </Template>
                        <FooterTemplate>
                            @(_Overview?.Presales.Sum(i => i.Metrics.Invoices - i.Metrics.InvoicesShipped) ?? 0)
                        </FooterTemplate>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn Property="InvoicesShipped" Title="Отгружено" TItem=Presale
                                          FooterCssClass="pnyd-footer" CssClass="pnyd-progress" Width="25%"
                                          TextAlign="TextAlign.Right" FilterOperator="Radzen.FilterOperator.GreaterThanOrEquals">
                        <Template>
                            <div class="profit-layout">
                                <div class="profit-progress"
                                     style="width: @(_GetProgressPercentString(context.Metrics.InvoicesShipped,
                                                     _Overview.Presales.Max(p => p.Metrics.InvoicesShipped)));
                                            background-color: @(ChartHelpers.GetColorAt(_SortedPresales.IndexOf(context), 0.3f))">
                                    &nbsp;
                                </div>
                                <span class="profit">
                                    @($"{context.Metrics.InvoicesShipped}")
                                </span>
                            </div>
                        </Template>
                        <FooterTemplate>
                            @(_Overview?.Presales.Sum(i => i.Metrics.InvoicesShipped) ?? 0)
                        </FooterTemplate>
                    </RadzenDataGridColumn>
                </Columns>
            </RadzenDataGrid>
        }
        <RadzenDataGrid TItem="_Arrival" class="@_ArrivalDisableClass"
                        Style="border: none!important;"
                        Data="@_Arrivals">
            <Columns>
                <RadzenDataGridColumn Property="Name" Title="@Localization["PresaleNameText"]" TItem="_Arrival" />
                <RadzenDataGridColumn Property="Timestamp" Title="Время" TItem="_Arrival">
                    <Template>
                        @(context.Timestamp.TimeOfDay)
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn Property="Delay" Title="Отставание" TItem="_Arrival">
                    <Template>
                        <div class="profit-layout">
                            <div class="profit-progress"
                                 style="width: @(_GetProgressPercentString(
                                                 context.Timestamp.TimeOfDay - _Arrivals.Min(a => a.Timestamp).TimeOfDay,
                                                 _Arrivals.Max(a => a.Timestamp).TimeOfDay
                                                    - _Arrivals.Min(a => a.Timestamp).TimeOfDay));
                                        background-color: @(ChartHelpers.GetColor("DeepGreen", 0.3f))">
                                &nbsp;
                            </div>
                            <span class="profit">
                                @(context.Timestamp - _Arrivals.First().Timestamp)
                            </span>
                        </div>
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
    </div>
    <div class="img-container content" style="background-image: url(@_Img?.Image.Regular)" />
    <div class="img-credits content">
        <p>
            @((MarkupString)Localization["UnsplashCredits",
                (MarkupString)$"<a href=\"{_Img?.Image.AuthorUrl}\" target=\"_blank\">{_Img?.Image.AuthorName}</a>",
                (MarkupString)$"<a href=\"{_Img?.Image.SourceUrl}\" target=\"_blank\">{_Img?.Image.SourceName}</a>"].Value)
        </p>
    </div>
    <div class="img-keyword content">
        <RadzenIcon Icon="@Helper.GetIcon(_KeywordType)" @onclick="@(() => _OnImageKeywordTypeChange())"
                    title="@Helper.GetIcon(_KeywordType)" Style="cursor: default;" />
        <input @bind="@_ImageKeyword" @bind:event="oninput" @onkeydown="@_OnManuallyImageUpdate" />
    </div>
</div>