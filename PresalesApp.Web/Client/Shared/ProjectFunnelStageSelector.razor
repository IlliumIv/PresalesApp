<Select Disabled="@_disabled" TValue="FunnelStage" SelectedValue=@Project.FunnelStage SelectedValueChanged="(stage) => OnStageChanged(stage)">
    @foreach (FunnelStage stage in System.Enum.GetValues(typeof(FunnelStage)))
    {
        <SelectItem Value="@stage">@stage.GetName(Localization)</SelectItem>
    }
</Select>

@code {
    [CascadingParameter]
    public MessageSnackbar messageHandler { get; set; }

    [Parameter]
    public Project? Project { get; set; }

    private bool _disabled;

    private async void OnStageChanged(FunnelStage stage)
    {
        if (Project == null) return;
        _disabled = true;
        try
        {
            var result = await BridgeApi.SetProjectFunnelStageAsync(new Bridge1C.NewProjectFunnelStage
                {
                    NewStage = stage,
                    ProjectNumber = Project.Number
                });

            if (!result.IsSuccess) throw new Exception(result.ErrorMessage);
        }
        catch (Exception e)
        {
            await messageHandler.Show(e.Message);
            stage = Project.FunnelStage;
        }

        Project.FunnelStage = stage;
        _disabled = false;
        StateHasChanged();
    }
}
