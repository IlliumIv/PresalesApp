@page "/kpi"
@using Google.Protobuf.Collections;
@using PresalesMonitor.Client.Web.Views
@using PresalesMonitor.Shared;
@using PresalesMonitor.Client.Web.Helpers;
@using Google.Protobuf.WellKnownTypes;
@using System.Runtime.Serialization;
@using System.Globalization;
@inject Presales.PresalesClient PresalesClient
@inject IJSRuntime js

<PageTitle>KPI</PageTitle>

<h1>KPI</h1>

<p>
    @if (presales == null)
        { <em>Loading...</em> }
    else
    {
        <label>Пресейл:</label>
        <select value="@selectedName" @onchange="((ChangeEventArgs e) => OnPresaleChanged(e?.Value))" class="form-select">
            <option selected=""></option>
            @foreach (var name in presales.Names)
                { <option value="@name">@name</option> }
        </select>
        <select id="month" value="@selectedMonth" @onchange="((ChangeEventArgs e) => OnMonthChanged(e?.Value))" class="form-select">
            @for (int m = 1; m <= 12; m++)
                { <option value="@m">@Helpers.ToUpperFirstLetterString(DateTimeFormatInfo.CurrentInfo.GetMonthName(m))</option> }
        </select>
        <select id="year" value="@selectedYear" @onchange="((ChangeEventArgs e) => OnYearChanged(e?.Value))" class="form-select">
            @for (int y = 2015; y <= DateTime.Now.Year; y++)
                { <option value="@y">@y</option> }
        </select>
        <button @attributes="downloadBtnAttrs" class="btn btn-primary" @onclick="DownloadReport">Скачать отчёт</button>
    }
</p>
<p role="status">@status</p>
@if (kpi is not null)
{
    <details class="pmspoiler">
        <summary>Легенда</summary>
            <p>По игнорируемым <span style="color:red">действиям</span>:</p>
            <p style="margin-left: 100px">Если действие игнорируется по ошибке, то скорее всего у него <span style="color:red">выбран неправильный тип</span>. Зайдите в проект и поправьте действие. После следующей синхронизации (раз в 10 минут) действие зачтётся.</p>
            <p>По игнорируемым <span style="color:red">проектам</span>:</p>
            <p style="margin-left: 100px">Проект игнорируется, если он <span style="color:red">никогда не синхронизировался</span> или в нём <span style="color:red">нет действий</span>, которые можно было бы учесть. Часто это основные проекты у дочерних или старые проекты, по которым прилетел счёт. То есть моему сервису известна только ЦБха и всё, никаких больше подробностей. Чтобы заставить сервис такой проект учитывать, просто добавьте в него любое пустое действие. После следующей синхронизации (раз в 10 минут) весь проект синхронизируется и все действия в нём будут учитываться. После этого пустое действие можно удалить или оставить - как хотите.</p>
            <p><span style="color:red">Красным</span> выделены те счета, по которым <span style="color:red">есть игнорируемые действия\проекты</span> или <span style="color:red">премия посчитана 0</span>.</p>
            <p>Сортировка:</p>
            <p style="margin-left: 100px">
                Чтобы порядок счетов тут совпадал с порядком счетов в 1С, нужно, чтобы отчёт по чистым группировал данные не по партнёру, а по контрагенту.
                Для этого можно воспользоваться преднастроенным вариантом отчёта из Органайзера ("Органайзер" > "Отчёты (органайзер)" > "Пресейлы, чистые продажи по контрагенту") или настроить отчёт самостоятельно.
                Если преднастроенный отчёт не отображается в органайзере, то его нужно включить ("Все действия" > "Настроить" > отметить отчёт галкой > "Сохранить изменения").
                Инструкция по самостоятельной настройке:
                <ol style="margin-left: 100px">
                    <li>В отчёте по чистым выбриаем вариант отчёта "ОТЧЕТ: Подразделение\Менеджер\Партнер\Валюта\ЗаказКлиента".</li>
                    <li>Нажимаем "Все действия" > "Изменить вариант".</li>
                    <li>В "Структуре отчёта" в четвёртом варианте группировки два раза тыкаем в "Партнёр":<img style="width: 65%" src="partner_example.png"></li>
                    <li>В открывшемся окне два раза тыкаем в "Партнёр" и заменяем на "Контрагент", нажимаем "ОК".</li>
                    <li>Нажимаем "Завершить редактирование" и формируем отчёт.</li>
                </ol>
            </p>
    </details>
    <InvoicesTable Invoices="kpi.Invoices"></InvoicesTable>
}

@code {
    private int selectedMonth = DateTime.Now.Month;
    private int selectedYear = DateTime.Now.Year;
    private string selectedName = string.Empty;
    private NamesResponse? presales;
    private Kpi? kpi;
    private Dictionary<string, object> downloadBtnAttrs { get; set; } = new() {{ "disabled", "disabled" }};
    private static DateOnly firstDay = new DateOnly(DateTime.Now.Year, DateTime.Now.Month, 1);
    private string status = string.Empty;

    private async Task DownloadReport() => await kpi.Download(js, selectedName, selectedMonth, selectedYear);
    private async Task GenerateReport()
    {
        kpi = null;
        downloadBtnAttrs = new() {{ "disabled", "disabled" }};

        if (string.IsNullOrEmpty(selectedName)) status = "Выберите пресейла.";

        var from = new DateTime(selectedYear, selectedMonth, 1);
        var to = from.AddMonths(1).AddSeconds(-1);

        var response = await PresalesClient.GetKpiAsync(new KpiRequest
            {
                PresaleName = selectedName,
                Period = new Period
                {
                    From = Timestamp.FromDateTime(from.ToUniversalTime()),
                    To = Timestamp.FromDateTime(to.ToUniversalTime())
                }
            }
        );

        if (response.ResponseCase == KpiResponse.ResponseOneofCase.Kpi)
        {
            kpi = response.Kpi;
            downloadBtnAttrs = new();
        }

        status = response.ResponseCase switch
        {
            KpiResponse.ResponseOneofCase.Error => response.Error.Message,
            KpiResponse.ResponseOneofCase.Kpi => "Отчёт сгенерирован!",
            KpiResponse.ResponseOneofCase.None => "Нет счетов за указанный период.",
            _ => "Неизвестный ответ сервера."
        };
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync() { presales = await PresalesClient.GetNamesAsync(new Empty()); }
    private async void OnPresaleChanged(object? obj)
    {
        selectedName = obj?.ToString() ?? string.Empty;
        await GenerateReport();
    }
    private async void OnYearChanged(object? obj)
    {
        int.TryParse(obj?.ToString(), out selectedYear);
        await GenerateReport();
    }
    private async void OnMonthChanged(object? obj)
    {
        int.TryParse(obj?.ToString(), out selectedMonth);
        await GenerateReport();
    }
}