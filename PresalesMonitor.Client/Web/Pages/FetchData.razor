@page "/fetchdata"
@using PresalesMonitor.Shared
@inject WeatherForecasts.WeatherForecastsClient WeatherForecastsClient
@inject Presales.PresalesClient PresalesClient

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var presale in presales)
            {
                        <tr>
                            <td>@presale.Name</td>
                        </tr>
            }
            </tbody>
        </table>
}

@code {
    private IList<WeatherForecast>? forecasts;
    private IList<Presale>? presales;

    protected override async Task OnInitializedAsync()
    {
        forecasts = (await WeatherForecastsClient.GetWeatherAsync(new WeatherForecast())).Forecasts;
        presales = (await PresalesClient.GetStatsAsync(new Presale())).Presales;
    }
}
